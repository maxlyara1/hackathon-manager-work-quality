# app.py

from src.data_preparation import ConversationExtractor
from src.summarization import ConversationSummarizer
from src.help_detection import ManagerHelped
from src.sentiment_analysis import SentimentAnalyzer
from src.support_mark import SetMarkForManager
from src.utils import get_text
import pandas as pd
import streamlit as st
import os
import numpy as np
import plotly.graph_objects as go
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–¥–ª—è –∑–∞–ø–∏—Å–∏ –æ—à–∏–±–æ–∫ –∏ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)
logger = logging.getLogger(__name__)


def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Streamlit.

    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥–∏–∫–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    """

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Streamlit: –∑–∞–≥–æ–ª–æ–≤–æ–∫, –∏–∫–æ–Ω–∫–∞, —à–∏—Ä–∏–Ω–∞
    st.set_page_config(
        page_title="–ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤", page_icon="üìû", layout="wide"
    )
    st.title("–ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è (session state)
    # –≠—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –º–µ–∂–¥—É –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏
    if "polite_count" not in st.session_state:
        st.session_state.polite_count = 0  # –°—á–µ—Ç—á–∏–∫ –≤–µ–∂–ª–∏–≤—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    if "not_polite_count" not in st.session_state:
        st.session_state.not_polite_count = 0  # –°—á–µ—Ç—á–∏–∫ –Ω–µ–≤–µ–∂–ª–∏–≤—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    if "manager_helped_count" not in st.session_state:
        st.session_state.manager_helped_count = 0  # –°—á–µ—Ç—á–∏–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–ª–∏
    if "manager_not_helped_count" not in st.session_state:
        st.session_state.manager_not_helped_count = (
            0  # –°—á–µ—Ç—á–∏–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–æ–º–æ–≥–ª–∏
        )
    if "total_score" not in st.session_state:
        st.session_state.total_score = 0.0  # –°—É–º–º–∞ –æ—Ü–µ–Ω–æ–∫ –≤—Å–µ—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    if "num_conversations" not in st.session_state:
        st.session_state.num_conversations = 0  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤

    # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (–µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    os.makedirs("temp", exist_ok=True)

    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
    st.sidebar.header("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
    uploaded_files = st.sidebar.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã (.txt)", type="txt", accept_multiple_files=True
    )

    # –ï—Å–ª–∏ —Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Ö
    if uploaded_files:
        table_data = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
        for uploaded_file in uploaded_files:
            try:
                # –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                file_path = os.path.join("temp", uploaded_file.name)
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
                with open(file_path, "wb") as f:
                    f.write(uploaded_file.getbuffer())

                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å –ø–æ–º–æ—â—å—é ConversationExtractor
                conversation_extractor = ConversationExtractor(file_path)
                conversation = (
                    conversation_extractor.extract_conversation()
                )  # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç—Ä–æ–∫–∏
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫
                table_data.extend(
                    conversation_extractor.extract_data(
                        conversation, uploaded_file.name
                    )
                )
            except Exception as e:
                # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ {uploaded_file.name}: {e}")
                continue  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ñ–∞–π–ª—É

        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∏–∑–≤–ª–µ—á–µ–Ω—ã, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if not table_data:
            st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
            return  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏

        # –°–æ–∑–¥–∞—ë–º DataFrame (—Ç–∞–±–ª–∏—Ü—É) –∏–∑ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        df = pd.DataFrame(table_data, columns=["conversation_id", "person", "message"])
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–ø–ª–∏–∫–∏ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
        df["message"] = df.groupby(
            ["conversation_id", (df["person"] != df["person"].shift()).cumsum()]
        )["message"].transform(lambda x: " ".join(x))
        # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã —Ä–µ–ø–ª–∏–∫
        df = df.drop_duplicates(
            subset=["message", "conversation_id", "person"]
        ).reset_index(drop=True)

        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –∏—Å—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        st.subheader("–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        st.dataframe(df)

        st.markdown("---")  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å

        # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        summarizer = ConversationSummarizer()
        set_mark_model = SetMarkForManager()
        manager_help_model = ManagerHelped()
        sentiment_analyzer = SentimentAnalyzer()

        # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ ID —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤
        for conversation_id in df["conversation_id"].unique():
            st.subheader(f"–†–∞–∑–≥–æ–≤–æ—Ä ‚Ññ {conversation_id}")

            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∫–ª–∏–µ–Ω—Ç–∞ –∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (–±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –≥–æ–≤–æ—Ä—è—â–µ–≥–æ)
            text_client = get_text(
                df, conversation_id, persons=["–ö–ª–∏–µ–Ω—Ç"], speaker=False
            )
            text_manager = get_text(
                df,
                conversation_id,
                persons=["–û–ø–µ—Ä–∞—Ç–æ—Ä", "–°–æ—Ç—Ä—É–¥–Ω–∏–∫", "–ú–µ–Ω–µ–¥–∂–µ—Ä"],
                speaker=False,
            )

            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º, –ø–æ–º–æ–≥ –ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä –∏ –±—ã–ª –ª–∏ –æ–Ω –≤–µ–∂–ª–∏–≤
            is_manager_helped = manager_help_model.analyze_manager_text(text_client)
            is_manager_was_polite = sentiment_analyzer.analyze_text_sentiment(
                text_manager
            )
            # –í—ã—á–∏—Å–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é –æ—Ü–µ–Ω–∫—É
            mark = set_mark_model.result(text_manager, text_client)

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –≤ session_state
            st.session_state.num_conversations += 1
            st.session_state.total_score += mark

            if is_manager_helped:
                st.session_state.manager_helped_count += 1
            else:
                st.session_state.manager_not_helped_count += 1

            if is_manager_was_polite:
                st.session_state.polite_count += 1
            else:
                st.session_state.not_polite_count += 1

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
            col1, col2, col3 = st.columns(3)  # –°–æ–∑–¥–∞—ë–º —Ç—Ä–∏ –∫–æ–ª–æ–Ω–∫–∏
            with col1:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º st.metric –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è "–î–∞" –∏–ª–∏ "–ù–µ—Ç"
                st.metric("–ü–æ–º–æ—â—å –∫–ª–∏–µ–Ω—Ç—É", "–î–∞" if is_manager_helped else "–ù–µ—Ç")
            with col2:
                st.metric(
                    "–í–µ–∂–ª–∏–≤–æ—Å—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞", "–î–∞" if is_manager_was_polite else "–ù–µ—Ç"
                )
            with col3:
                st.metric(
                    "–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞", f"{mark:.2f}"
                )  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ü–µ–Ω–∫—É —Å –¥–≤—É–º—è –∑–Ω–∞–∫–∞–º–∏

            # –ë–ª–æ–∫ —Å –∫—Ä–∞—Ç–∫–∏–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ (—Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º—ã–π)
            with st.expander(f"–ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ ‚Ññ {conversation_id}"):
                conversation_summary = summarizer.summarize_conversation(
                    df, conversation_id
                )
                if conversation_summary:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
                    st.write(conversation_summary)  # –í—ã–≤–æ–¥–∏–º –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
                else:
                    st.write("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ.")

            # –ë–ª–æ–∫ —Å –ø–æ–ª–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ (—Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º—ã–π)
            with st.expander(f"–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ ‚Ññ {conversation_id}"):
                # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç *–≤—Å–µ—Ö* —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
                text_with_punctuation_all = get_text(
                    df,
                    conversation_id,
                    persons=["–û–ø–µ—Ä–∞—Ç–æ—Ä", "–°–æ—Ç—Ä—É–¥–Ω–∏–∫", "–ú–µ–Ω–µ–¥–∂–µ—Ä", "–ö–ª–∏–µ–Ω—Ç"],
                )
                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—Å—Ç –≤ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–º –ø–æ–ª–µ
                st.text_area(label="", value=text_with_punctuation_all, height=400)

            st.markdown("---")  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å

        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–∞–º (—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Plotly)
        st.subheader("–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–∞–º")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —Ä–∞–∑–≥–æ–≤–æ—Ä—ã (—á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å)
        if st.session_state.num_conversations > 0:
            # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω—é—é –æ—Ü–µ–Ω–∫—É
            avg_score = (
                st.session_state.total_score / st.session_state.num_conversations
            )
            st.metric("–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –ø–æ –≤—Å–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–∞–º", f"{avg_score:.2f}")

            # –°–æ–∑–¥–∞—ë–º –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
            col1, col2 = st.columns(2)
            with col1:
                st.write("–í–µ–∂–ª–∏–≤–æ—Å—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤")
                polite_labels = ["–í–µ–∂–ª–∏–≤", "–ù–µ–≤–µ–∂–ª–∏–≤"]  # –ü–æ–¥–ø–∏—Å–∏ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
                polite_values = [
                    st.session_state.polite_count,
                    st.session_state.not_polite_count,
                ]  # –ó–Ω–∞—á–µ–Ω–∏—è
                # –°–æ–∑–¥–∞—ë–º –∫—Ä—É–≥–æ–≤—É—é –¥–∏–∞–≥—Ä–∞–º–º—É —Å –ø–æ–º–æ—â—å—é Plotly
                polite_fig = go.Figure(
                    data=[go.Pie(labels=polite_labels, values=polite_values, hole=0.3)]
                )
                st.plotly_chart(polite_fig, use_container_width=True)  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º

            with col2:
                st.write("–ü–æ–º–æ—â—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤")
                manager_help_labels = ["–ü–æ–º–æ–≥", "–ù–µ –ø–æ–º–æ–≥"]
                manager_help_values = [
                    st.session_state.manager_helped_count,
                    st.session_state.manager_not_helped_count,
                ]
                manager_help_fig = go.Figure(
                    data=[
                        go.Pie(
                            labels=manager_help_labels,
                            values=manager_help_values,
                            hole=0.3,  # –û—Ç–≤–µ—Ä—Å—Ç–∏–µ –≤ —Ü–µ–Ω—Ç—Ä–µ
                        )
                    ]
                )
                st.plotly_chart(
                    manager_help_fig, use_container_width=True
                )  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º
        else:
            st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")

    else:
        st.info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")


if __name__ == "__main__":
    main()
